version: "3.9"

services:
  web:
    build:
      context: ../
      dockerfile: .docker/Dockerfile.app
    ports: 
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
      scraper:
        condition: service_started

  db:
    image: postgres:12.5
    container_name: db
    environment:
      - POSTGRES_DB=cars_tracker
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    # volumes:
    #   - ./data/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 30s
      retries: 6
    restart: always

  scraper:
    build:
      context: ../
      dockerfile: .docker/Dockerfile.scrapy
    ports: 
      - "5100:5100"
    depends_on:
      db:
        condition: service_healthy
      celery:
        condition: service_started

  celery:
    build:
      context: ../
      dockerfile: .docker/Dockerfile.scrapy
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

    command: ['celery', '-A', 'web.celery_queue.celery_app', 'worker', '-l', 'info']

  redis:
    image: redis:7.0.11-bullseye
